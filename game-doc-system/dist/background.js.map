{"version":3,"file":"background.js","mappings":"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","sources":["webpack://game-doc-system/./src/shared/storage.ts","webpack://game-doc-system/./src/shared/types.ts","webpack://game-doc-system/webpack/bootstrap","webpack://game-doc-system/webpack/runtime/define property getters","webpack://game-doc-system/webpack/runtime/hasOwnProperty shorthand","webpack://game-doc-system/webpack/runtime/make namespace object","webpack://game-doc-system/./src/background/background.ts"],"sourcesContent":["import { GameProject, GameDocument, DocumentType, DocumentStatus, DocumentVersion } from './types';\r\n\r\nexport class StorageManager {\r\n  // Initialize storage\r\n  public async initialize(): Promise<void> {\r\n    const existingData = await this.getProjects();\r\n    \r\n    if (!existingData) {\r\n      await chrome.storage.local.set({ projects: {} });\r\n      console.log('Storage initialized with empty projects');\r\n    }\r\n  }\r\n  \r\n  // Get all projects\r\n  public async getProjects(): Promise<Record<string, GameProject> | null> {\r\n    const data = await chrome.storage.local.get('projects');\r\n    return data.projects || null;\r\n  }\r\n  \r\n  // Get specific project\r\n  public async getProject(projectId: string): Promise<GameProject | null> {\r\n    const projects = await this.getProjects();\r\n    return projects && projects[projectId] ? projects[projectId] : null;\r\n  }\r\n  \r\n  // Create new project\r\n  public async createProject(name: string): Promise<GameProject> {\r\n    const projects = await this.getProjects() || {};\r\n    \r\n    const projectId = 'project_' + Date.now();\r\n    const timestamp = Date.now();\r\n    \r\n    const newProject: GameProject = {\r\n      id: projectId,\r\n      name,\r\n      createdAt: timestamp,\r\n      updatedAt: timestamp,\r\n      documents: this.createInitialDocuments(projectId)\r\n    };\r\n    \r\n    projects[projectId] = newProject;\r\n    await chrome.storage.local.set({ projects });\r\n    \r\n    return newProject;\r\n  }\r\n  \r\n  // Create the initial document set for a new project\r\n  private createInitialDocuments(projectId: string): Record<string, GameDocument> {\r\n    const documents: Record<string, GameDocument> = {};\r\n    const timestamp = Date.now();\r\n    \r\n    // Create a document entry for each document type\r\n    Object.values(DocumentType).forEach((type) => {\r\n      const documentId = `${projectId}_${type}`;\r\n      \r\n      documents[documentId] = {\r\n        id: documentId,\r\n        projectId,\r\n        type: type as DocumentType,\r\n        title: this.getDefaultTitle(type as DocumentType),\r\n        content: '',\r\n        status: DocumentStatus.NotStarted,\r\n        createdAt: timestamp,\r\n        updatedAt: timestamp,\r\n        versions: []\r\n      };\r\n    });\r\n    \r\n    return documents;\r\n  }\r\n  \r\n  // Get default title for each document type\r\n  private getDefaultTitle(type: DocumentType): string {\r\n    const titles: Record<DocumentType, string> = {\r\n      [DocumentType.GameVision]: 'Game Vision',\r\n      [DocumentType.CoreGameConcept]: 'Core Game Concept',\r\n      [DocumentType.TargetAudience]: 'Target Audience',\r\n      [DocumentType.CorePillarsValues]: 'Core Pillars and Values',\r\n      [DocumentType.WhyPlayIt]: 'Why Would They Play It?',\r\n      [DocumentType.WhatShouldTheyFeel]: 'What Should They Feel?',\r\n      [DocumentType.UniqueSellingPoints]: 'Unique Selling Points',\r\n      [DocumentType.GameLoop]: 'Game Loop',\r\n      [DocumentType.PlayerJourney]: 'Player Journey',\r\n      [DocumentType.StoryOverview]: 'Story Overview',\r\n      [DocumentType.Presentation]: 'Presentation',\r\n      [DocumentType.KeyQuestions]: 'Key Questions',\r\n      [DocumentType.CoreDesignDetails]: 'Core Design Details',\r\n      [DocumentType.StrategicDirection]: 'Strategic Direction'\r\n    };\r\n    \r\n    return titles[type] || 'Untitled Document';\r\n  }\r\n  \r\n  // Update document\r\n  public async updateDocument(document: GameDocument): Promise<GameDocument> {\r\n    const projects = await this.getProjects();\r\n    if (!projects) throw new Error('No projects found');\r\n    \r\n    const project = projects[document.projectId];\r\n    if (!project) throw new Error('Project not found');\r\n    \r\n    // Create new version if content changed\r\n    const existingDoc = project.documents[document.id];\r\n    if (existingDoc && existingDoc.content !== document.content && existingDoc.content !== '') {\r\n      const newVersion: DocumentVersion = {\r\n        versionNumber: existingDoc.versions.length + 1,\r\n        content: existingDoc.content,\r\n        createdAt: Date.now(),\r\n        notes: 'Automatic version created'\r\n      };\r\n      \r\n      document.versions = [...existingDoc.versions, newVersion];\r\n    }\r\n    \r\n    document.updatedAt = Date.now();\r\n    project.documents[document.id] = document;\r\n    project.updatedAt = Date.now();\r\n    \r\n    await chrome.storage.local.set({ projects });\r\n    \r\n    return document;\r\n  }\r\n  \r\n  // Delete project\r\n  public async deleteProject(projectId: string): Promise<void> {\r\n    const projects = await this.getProjects();\r\n    if (!projects) return;\r\n    \r\n    delete projects[projectId];\r\n    await chrome.storage.local.set({ projects });\r\n  }\r\n}\r\n\r\n// Create a singleton instance\r\nexport const storageManager = new StorageManager();\r\n","// Document types supported by the system\r\nexport enum DocumentType {\r\n  GameVision = 'game_vision',\r\n  CoreGameConcept = 'core_game_concept',\r\n  TargetAudience = 'target_audience',\r\n  CorePillarsValues = 'core_pillars_values',\r\n  WhyPlayIt = 'why_play_it',\r\n  WhatShouldTheyFeel = 'what_should_they_feel',\r\n  UniqueSellingPoints = 'unique_selling_points',\r\n  GameLoop = 'game_loop',\r\n  PlayerJourney = 'player_journey',\r\n  StoryOverview = 'story_overview',\r\n  Presentation = 'presentation',\r\n  KeyQuestions = 'key_questions',\r\n  CoreDesignDetails = 'core_design_details',\r\n  StrategicDirection = 'strategic_direction'\r\n}\r\n\r\n// Document status\r\nexport enum DocumentStatus {\r\n  NotStarted = 'not_started',\r\n  InProgress = 'in_progress',\r\n  Completed = 'completed'\r\n}\r\n\r\n// Project structure\r\nexport interface GameProject {\r\n  id: string;\r\n  name: string;\r\n  createdAt: number;\r\n  updatedAt: number;\r\n  documents: Record<string, GameDocument>;\r\n}\r\n\r\n// Document structure\r\nexport interface GameDocument {\r\n  id: string;\r\n  projectId: string;\r\n  type: DocumentType;\r\n  title: string;\r\n  content: string;\r\n  status: DocumentStatus;\r\n  createdAt: number;\r\n  updatedAt: number;\r\n  versions: DocumentVersion[];\r\n}\r\n\r\n// Document version\r\nexport interface DocumentVersion {\r\n  versionNumber: number;\r\n  content: string;\r\n  createdAt: number;\r\n  notes: string;\r\n}\r\n\r\n// Message types for communication between components\r\nexport enum MessageType {\r\n  GetProjects = 'get_projects',\r\n  CreateProject = 'create_project',\r\n  UpdateProject = 'update_project',\r\n  DeleteProject = 'delete_project',\r\n  GetProject = 'get_project',\r\n  CreateDocument = 'create_document',\r\n  UpdateDocument = 'update_document',\r\n  GetDocument = 'get_document',\r\n  DeleteDocument = 'delete_document',\r\n  StartDocumentCreation = 'start_document_creation'\r\n}\r\n\r\n// Message structure\r\nexport interface Message {\r\n  type: MessageType;\r\n  payload: any;\r\n}\r\n\r\n// Response structure\r\nexport interface Response {\r\n  success: boolean;\r\n  data?: any;\r\n  error?: string;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { StorageManager, storageManager } from '../shared/storage';\r\nimport { MessageType, Response } from '../shared/types';\r\n\r\n// Initialize when extension is installed or updated\r\nchrome.runtime.onInstalled.addListener(async () => {\r\n  console.log('Game Development Document System installed/updated');\r\n  await storageManager.initialize();\r\n});\r\n\r\n// Listen for messages from content scripts or popup\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  handleMessage(message)\r\n    .then(sendResponse)\r\n    .catch(error => {\r\n      console.error('Error handling message:', error);\r\n      sendResponse({ success: false, error: error.message });\r\n    });\r\n  \r\n  // Return true to indicate we'll respond asynchronously\r\n  return true;\r\n});\r\n\r\n// Handle messages based on their type\r\nasync function handleMessage(message: any): Promise<Response> {\r\n  console.log('Background received message:', message);\r\n  \r\n  const { type, payload } = message;\r\n  \r\n  try {\r\n    switch (type) {\r\n      case MessageType.GetProjects:\r\n        const projects = await storageManager.getProjects();\r\n        return { success: true, data: projects };\r\n        \r\n      case MessageType.CreateProject:\r\n        const project = await storageManager.createProject(payload.name);\r\n        return { success: true, data: project };\r\n        \r\n      case MessageType.GetProject:\r\n        const foundProject = await storageManager.getProject(payload.projectId);\r\n        return { success: true, data: foundProject };\r\n        \r\n      case MessageType.UpdateDocument:\r\n        const updatedDoc = await storageManager.updateDocument(payload.document);\r\n        return { success: true, data: updatedDoc };\r\n        \r\n      case MessageType.DeleteProject:\r\n        await storageManager.deleteProject(payload.projectId);\r\n        return { success: true };\r\n        \r\n      default:\r\n        return { success: false, error: `Unknown message type: ${type}` };\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    };\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}